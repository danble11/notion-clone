import { jsx as _jsx } from "react/jsx-runtime";
import { flip, offset } from "@floating-ui/react";
import { useBlockNoteEditor } from "../../hooks/useBlockNoteEditor.js";
import { useUIElementPositioning } from "../../hooks/useUIElementPositioning.js";
import { useUIPluginState } from "../../hooks/useUIPluginState.js";
import { FilePanel } from "./FilePanel.js";
export const FilePanelController = (props) => {
    const editor = useBlockNoteEditor();
    if (!editor.filePanel) {
        throw new Error("FileToolbarController can only be used when BlockNote editor schema contains file block");
    }
    const state = useUIPluginState(editor.filePanel.onUpdate.bind(editor.filePanel));
    const { isMounted, ref, style, getFloatingProps } = useUIElementPositioning(state?.show || false, state?.referencePos || null, 5000, {
        placement: "bottom",
        middleware: [offset(10), flip()],
        onOpenChange: (open) => {
            if (!open) {
                editor.filePanel.closeMenu();
                editor.focus();
            }
        },
        ...props.floatingOptions,
    });
    if (!isMounted || !state) {
        return null;
    }
    const { show, referencePos, ...data } = state;
    const Component = props.filePanel || FilePanel;
    return (_jsx("div", { ref: ref, style: style, ...getFloatingProps(), children: _jsx(Component, { ...data }) }));
};
//# sourceMappingURL=FilePanelController.js.map