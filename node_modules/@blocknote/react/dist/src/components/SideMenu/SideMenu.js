import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { useMemo } from "react";
import { useComponentsContext } from "../../editor/ComponentsContext.js";
import { AddBlockButton } from "./DefaultButtons/AddBlockButton.js";
import { DragHandleButton } from "./DefaultButtons/DragHandleButton.js";
// TODO: props.dragHandleMenu should only be available if no children are passed
/**
 * By default, the SideMenu component will render with default buttons. However,
 * you can override the buttons to render by passing children. The children you
 * pass should be:
 *
 * - Default buttons: Components found within the `/DefaultButtons` directory.
 * - Custom buttons: The `SideMenuButton` component.
 */
export const SideMenu = (props) => {
    const Components = useComponentsContext();
    const dataAttributes = useMemo(() => {
        const attrs = {
            "data-block-type": props.block.type,
        };
        if (props.block.type === "heading") {
            attrs["data-level"] = props.block.props.level.toString();
        }
        if (props.editor.schema.blockSchema[props.block.type].isFileBlock) {
            if (props.block.props.url) {
                attrs["data-url"] = "true";
            }
            else {
                attrs["data-url"] = "false";
            }
        }
        return attrs;
    }, [props.block, props.editor.schema.blockSchema]);
    return (_jsx(Components.SideMenu.Root, { className: "bn-side-menu", ...dataAttributes, children: props.children || (_jsxs(_Fragment, { children: [_jsx(AddBlockButton, { ...props }), _jsx(DragHandleButton, { ...props })] })) }));
};
//# sourceMappingURL=SideMenu.js.map