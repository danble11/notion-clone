import { jsx as _jsx } from "react/jsx-runtime";
import { useBlockNoteEditor } from "../../hooks/useBlockNoteEditor.js";
import { useUIElementPositioning } from "../../hooks/useUIElementPositioning.js";
import { useUIPluginState } from "../../hooks/useUIPluginState.js";
import { SideMenu } from "./SideMenu.js";
export const SideMenuController = (props) => {
    const editor = useBlockNoteEditor();
    const callbacks = {
        blockDragStart: editor.sideMenu.blockDragStart,
        blockDragEnd: editor.sideMenu.blockDragEnd,
        freezeMenu: editor.sideMenu.freezeMenu,
        unfreezeMenu: editor.sideMenu.unfreezeMenu,
    };
    const state = useUIPluginState(editor.sideMenu.onUpdate.bind(editor.sideMenu));
    const { isMounted, ref, style, getFloatingProps } = useUIElementPositioning(state?.show || false, state?.referencePos || null, 1000, {
        placement: "left-start",
        ...props.floatingOptions,
    });
    if (!isMounted || !state) {
        return null;
    }
    const { show, referencePos, ...data } = state;
    const Component = props.sideMenu || SideMenu;
    return (_jsx("div", { ref: ref, style: style, ...getFloatingProps(), children: _jsx(Component, { ...data, ...callbacks, editor: editor }) }));
};
//# sourceMappingURL=SideMenuController.js.map