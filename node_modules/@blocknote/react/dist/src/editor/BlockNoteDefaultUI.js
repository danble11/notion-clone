import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { FilePanelController } from "../components/FilePanel/FilePanelController.js";
import { FormattingToolbarController } from "../components/FormattingToolbar/FormattingToolbarController.js";
import { LinkToolbarController } from "../components/LinkToolbar/LinkToolbarController.js";
import { SideMenuController } from "../components/SideMenu/SideMenuController.js";
import { GridSuggestionMenuController } from "../components/SuggestionMenu/GridSuggestionMenu/GridSuggestionMenuController.js";
import { SuggestionMenuController } from "../components/SuggestionMenu/SuggestionMenuController.js";
import { TableHandlesController } from "../components/TableHandles/TableHandlesController.js";
import { useBlockNoteEditor } from "../hooks/useBlockNoteEditor.js";
export function BlockNoteDefaultUI(props) {
    const editor = useBlockNoteEditor();
    if (!editor) {
        throw new Error("BlockNoteDefaultUI must be used within a BlockNoteContext.Provider");
    }
    return (_jsxs(_Fragment, { children: [props.formattingToolbar !== false && _jsx(FormattingToolbarController, {}), props.linkToolbar !== false && _jsx(LinkToolbarController, {}), props.slashMenu !== false && (_jsx(SuggestionMenuController, { triggerCharacter: "/" })), props.emojiPicker !== false && (_jsx(GridSuggestionMenuController, { triggerCharacter: ":", columns: 10, minQueryLength: 2 })), props.sideMenu !== false && _jsx(SideMenuController, {}), editor.filePanel && props.filePanel !== false && _jsx(FilePanelController, {}), editor.tableHandles && props.tableHandles !== false && (_jsx(TableHandlesController, {}))] }));
}
//# sourceMappingURL=BlockNoteDefaultUI.js.map