import { checkDefaultInlineContentTypeInSchema } from "../../blocks/defaultBlockTypeGuards.js";
let data;
let emojiMart;
export async function getDefaultEmojiPickerItems(editor, query) {
    if (!checkDefaultInlineContentTypeInSchema("text", editor)) {
        return [];
    }
    if (!data) {
        // use a dynamic import to encourage bundle-splitting
        // and a smaller initial client bundle size
        data = import("@emoji-mart/data");
        // load dynamically because emoji-mart doesn't specify type: module and breaks in nodejs
        emojiMart = await import("emoji-mart");
        const emojiMartData = (await data).default;
        await emojiMart.init({ data: emojiMartData });
    }
    const emojiMartData = (await data).default;
    const emojisToShow = query.trim() === ""
        ? Object.values(emojiMartData.emojis)
        : (await emojiMart.SearchIndex.search(query));
    return emojisToShow.map((emoji) => ({
        id: emoji.skins[0].native,
        onItemClick: () => editor.insertInlineContent(emoji.skins[0].native + " "),
    }));
}
//# sourceMappingURL=getDefaultEmojiPickerItems.js.map